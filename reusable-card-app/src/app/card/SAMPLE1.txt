 @Test
    void testCashAllocationModelList_InvoiceRef_LongLine() {
        List<String> lines = new ArrayList<>();
        lines.add(" ".repeat(514) + "invoiceRefFromLongLine");
        String fileName = "DATA_REC_FILE";
        Mockito.when(cashAllocationDomain.getCashAllocationModel(Mockito.anyString(), Mockito.any(BigDecimal.class), Mockito.anyString(), Mockito.anyString(), Mockito.any(Date.class), Mockito.anyString()))
            .thenReturn(new CashAllocationModel());
        Mockito.when(cashAllocationDomain.getLineSubstrings()).thenReturn(lines.get(0)); // Corrected line

        List<CashAllocationModel> result = cashAllocationDomain.cashAllocationModelList(lines, fileName);

        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals("invoiceRefFromLongLine", result.get(0).getInvoiceRef());
    }

    @Test
    void testCashAllocationModelList_InvoiceRef_ShortLine() {
        List<String> lines = new ArrayList<>();
        lines.add(" ".repeat(116) + "invoiceRefFromShortLine" + " ".repeat(358));
        String fileName = "DATA_REC_FILE";
        Mockito.when(cashAllocationDomain.getInvoiceRefFromSupplementaryDetails(Mockito.anyString())).thenReturn("invoiceRefFromShortLine");
        Mockito.when(cashAllocationDomain.getCashAllocationModel(Mockito.anyString(), Mockito.any(BigDecimal.class), Mockito.anyString(), Mockito.anyString(), Mockito.any(Date.class), Mockito.anyString()))
            .thenReturn(new CashAllocationModel());
        Mockito.when(cashAllocationDomain.getLineSubstrings()).thenReturn(lines.get(0)); // Corrected line

        List<CashAllocationModel> result = cashAllocationDomain.cashAllocationModelList(lines, fileName);

        assertNotNull(result);
        assertEquals(1, result.size());
        assertEquals("invoiceRefFromShortLine", result.get(0).getInvoiceRef());
    }