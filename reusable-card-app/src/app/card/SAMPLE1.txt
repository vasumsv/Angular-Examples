@Test
    public void testInsertPaymentLines_referentialServiceApiExceptions() {
        // Arrange
        List<PaymentLinesFeoModel> finalDataForInsertion = new ArrayList<>();
        PaymentLinesFeoModel paymentLine = new PaymentLinesFeoModel();
        paymentLine.setProviderId("provider1");
        paymentLine.setProviderMnemonic("mnemonic1");
        finalDataForInsertion.add(paymentLine);

        InsertPaymentResponse response = new InsertPaymentResponse();

        // Mock the first call to throw an exception (providerDetails)
        when(referentialServiceApi.getProviderDetails("provider1", "mnemonic1"))
                .thenThrow(new RuntimeException("Provider details error"));

        // Act
        response = cashAllocationDomain.insertPaymentLines(finalDataForInsertion, "user");

        // Assert - Provider Details Exception
        Assertions.assertEquals("MESSAGE", response.getStatus());
        Assertions.assertTrue(response.getErrorMessage().contains("Error occurred while getting provider details"));

        verify(logger).error(anyString()); // Verify logger was called

        // Reset the response
        response = new InsertPaymentResponse();

        // Mock the second call to throw an exception (userDetails)
        when(referentialServiceApi.getUserInitials("user"))
                .thenThrow(new RuntimeException("User details error"));

        // Act
        response = cashAllocationDomain.insertPaymentLines(finalDataForInsertion, "user");

        // Assert - User Details Exception
        Assertions.assertEquals("MESSAGE", response.getStatus());
        Assertions.assertTrue(response.getErrorMessage().contains("Error occurred while getting user initial details"));

        verify(logger, times(2)).error(anyString()); // Verify logger was called twice (once for each exception)
    }