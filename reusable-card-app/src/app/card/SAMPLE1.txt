@Test
    void testTransferFile_FileNotFoundException() throws Exception {
        // Prepare data
        LocalDate date = LocalDate.now();
        List<CashAllocationModel> cashAllocationModels = new ArrayList<>();

        // Create a mocked CashAllocationModel
        CashAllocationModel model = mock(CashAllocationModel.class);
        when(model.getInvoiceMatched()).thenReturn("RSF-123");
        when(model.getCounterPartyId()).thenReturn("CP123");
        when(model.getCreatedDate()).thenReturn(new Date());

        // Create and set InvoicesAbList in the mock
        InvoicesAbList invoicesAbList = mock(InvoicesAbList.class);
        when(invoicesAbList.getInvoicesAb()).thenReturn(new ArrayList<>());
        when(model.getInvoicesAbList()).thenReturn(invoicesAbList);

        cashAllocationModels.add(model);

        try {
            // Access the private transferFile method using reflection
            Method transferFileMethod = AbDomain.class.getDeclaredMethod("transferFile", LocalDate.class, List.class);
            transferFileMethod.setAccessible(true);

            // Call the private method
            transferFileMethod.invoke(abDomain, date, cashAllocationModels);
        } catch (Exception e) {
            System.out.println("FileNotFoundException caught in test case: " + e.getMessage());
            // Add assertions if needed
        }
    }