   @Test
    void updatePaymentLines_Success_PaymentTypeA() {
        when(srgMapper.mapNew(any())).thenReturn(createPaymentLinesFeoModelList());
        when(paymentRepository.getPaymentEntitiesByPaymentReference(anyString())).thenReturn(createSrgPaymentModelList());
        when(referentialServiceApi.getAccountDetailsFromBdrForPayment(any(), any(), any(), any(), any(), any(), any())).thenReturn(new TrglbdrResponse());
        when(referentialServiceApi.getUserInitials(anyString())).thenReturn(new UserDetailsModel());
        when(referentialServiceApi.getPaymentModeDetails(anyString())).thenReturn(new PaymentModeModel());
        when(referentialServiceApi.getSsiDetails(any(), any(), any(), any())).thenReturn(new ArrayList<>());

        String result = cashAllocationDomain.updatePaymentLines("testUser", createUpdatePaymentLinesList("A"));

        assertEquals("SUCCESSFUL", result);
        verify(srgMapper, times(1)).mapNew(any());
        verify(paymentRepository, times(1)).getPaymentEntitiesByPaymentReference(anyString());
        verify(referentialServiceApi, times(1)).getAccountDetailsFromBdrForPayment(any(), any(), any(), any(), any(), any(), any());
        verify(referentialServiceApi, times(1)).getUserInitials(anyString());
        verify(referentialServiceApi, times(1)).getPaymentModeDetails(anyString());
        verify(referentialServiceApi, times(1)).getSsiDetails(any(), any(), any(), any());
    }

    @Test
    void updatePaymentLines_Success_PaymentTypeNotA() {
        when(srgMapper.mapNew(any())).thenReturn(createPaymentLinesFeoModelList());
        when(paymentRepository.getPaymentEntitiesByPaymentReference(anyString())).thenReturn(createSrgPaymentModelList());
        when(referentialServiceApi.getAccountDetailsFromBdrForPayment(any(), any(), any(), any(), any(), any(), any())).thenReturn(new TrglbdrResponse());
        when(referentialServiceApi.getUserInitials(anyString())).thenReturn(new UserDetailsModel());

        String result = cashAllocationDomain.updatePaymentLines("testUser", createUpdatePaymentLinesList("B"));

        assertEquals("SUCCESSFUL", result);
        verify(srgMapper, times(1)).mapNew(any());
        verify(paymentRepository, times(1)).getPaymentEntitiesByPaymentReference(anyString());
        verify(referentialServiceApi, times(1)).getAccountDetailsFromBdrForPayment(any(), any(), any(), any(), any(), any(), any());
        verify(referentialServiceApi, times(1)).getUserInitials(anyString());
        verify(referentialServiceApi, never()).getPaymentModeDetails(anyString());
        verify(referentialServiceApi, never()).getSsiDetails(any(), any(), any(), any());
    }