@Test
void updatePaymentLines_Success() {
    String user = "testUser";
    List<UpdatePaymentLines> finalDataForInsertion = new ArrayList<>();

    // Create a sample UpdatePaymentLines object and add it to the list
    UpdatePaymentLines updatePaymentLines = new UpdatePaymentLines();
    // Set necessary properties of updatePaymentLines (e.g., paymentRef, etc.)
    finalDataForInsertion.add(updatePaymentLines);

    // Mock the repository save method (if needed)
    when(cashAllocationRepositoryApi.save(any())).thenReturn(null);

    // Mock the InvoiceServiceApi to return a non-null value for getListOfInvoices
    when(invoiceServiceApi.getListOfInvoices(any())).thenReturn(createInvoicePayableModelList()); // Replace with your actual method

    String result = cashAllocationDomain.updatePaymentLines(user, finalDataForInsertion);

    assertEquals("SUCCESSFUL", result);
    verify(invoiceServiceApi, times(1)).sendPaymentDetailsToInvoiceService(any());
}

// Helper method to create a sample InvoicePayableModel list
private List<InvoicePayableModel> createInvoicePayableModelList() {
    List<InvoicePayableModel> invoicePayableModels = new ArrayList<>();
    // Populate the list with sample InvoicePayableModel objects
    return invoicePayableModels;
}