 @Test
    void testCashAllocationModelList_Lines306_314_LongLine() {
        List<String> lines = new ArrayList<>();
        lines.add(" ".repeat(514) + "invoiceRefFromLongLine");
        Mockito.when(cashAllocationDomain.lineSubstrings).thenReturn(lines.get(0));

        String invoiceRef = cashAllocationDomain.getInvoiceRefFromLine(lines.get(0));

        assertEquals("invoiceRefFromLongLine", invoiceRef);
    }

    @Test
    void testCashAllocationModelList_Lines306_314_ShortLine() {
        List<String> lines = new ArrayList<>();
        lines.add(" ".repeat(116) + "invoiceRefFromShortLine" + " ".repeat(358));
        Mockito.when(cashAllocationDomain.lineSubstrings).thenReturn(lines.get(0));
        Mockito.when(cashAllocationDomain.getInvoiceRefFromSupplementaryDetails(Mockito.anyString())).thenReturn("invoiceRefFromShortLine");

        String invoiceRef = cashAllocationDomain.getInvoiceRefFromLine(lines.get(0));

        assertEquals("invoiceRefFromShortLine", invoiceRef);
    }

    @Test
    void testCashAllocationModelList_Lines306_314_Exception() {
        List<String> lines = new ArrayList<>();
        lines.add(" ".repeat(116) + "invoiceRefFromShortLine" + " ".repeat(358));
        Mockito.when(cashAllocationDomain.lineSubstrings).thenReturn(lines.get(0));
        Mockito.when(cashAllocationDomain.getInvoiceRefFromSupplementaryDetails(Mockito.anyString())).thenThrow(new RuntimeException("Test Exception"));

        String invoiceRef = cashAllocationDomain.getInvoiceRefFromLine(lines.get(0));

        assertEquals("", invoiceRef); // Expect an empty string due to the catch block
    }