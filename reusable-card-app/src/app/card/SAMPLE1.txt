   @Test
    void testSendSrgAckRequest_NotOkStatus() {
        // Arrange
        SrgAckSentRequest request = new SrgAckSentRequest();
        ResponseEntity<String> response = new ResponseEntity<>("Error Body", HttpStatus.BAD_REQUEST);

        when(restTemplate.exchange(anyString(), any(), any(), eq(String.class)))
                .thenReturn(response);

        // Act & Assert
        CashAllocationCustomException exception = assertThrows(CashAllocationCustomException.class,
                () -> srgAckApiClient.sendSrgAckRequest(request));

        assertEquals(HttpStatus.NO_CONTENT, exception.getHttpStatus());
        assertEquals("Srg Ack Request Gave Error", exception.getMessage());
    }

    @Test
    void testSendSrgAckRequest_RestClientException() {
        // Arrange
        SrgAckSentRequest request = new SrgAckSentRequest();
        when(restTemplate.exchange(anyString(), any(), any(), eq(String.class)))
                .thenThrow(new RestClientException("Test RestClientException"));

        // Act & Assert
        CashAllocationCustomException exception = assertThrows(CashAllocationCustomException.class,
                () -> srgAckApiClient.sendSrgAckRequest(request));

        assertEquals(HttpStatus.NOT_FOUND, exception.getHttpStatus());
        assertEquals("New Error: http://localhost:50005/api/v1/srg-pmt-ack-client/get-ack: Test RestClientException", exception.getMessage());
    }