 @Test
    public void testInsertPaymentLines_invoiceAmountMismatch() {
        // Arrange
        List<PaymentLinesFeoModel> finalDataForInsertion = new ArrayList<>();
        PaymentLinesFeoModel paymentLine = new PaymentLinesFeoModel();
        paymentLine.setAmount(BigDecimal.valueOf(100));
        finalDataForInsertion.add(paymentLine);

        List<InvoicePayableModel> invoices = new ArrayList<>();
        InvoicePayableModel invoice1 = new InvoicePayableModel();
        invoice1.setAmount(BigDecimal.valueOf(50));
        invoice1.setInvoiceType("CREDIT");
        invoices.add(invoice1);
        InvoicePayableModel invoice2 = new InvoicePayableModel();
        invoice2.setAmount(BigDecimal.valueOf(100));
        invoice2.setInvoiceType("DEBIT");
        invoices.add(invoice2);

        // Mock the method call that gets the invoice list (you'll need to adjust this based on your actual logic)
        // Assuming your class has a method to get the invoice list, let's call it getInvoicesForPaymentLine
        when(cashAllocationDomain.getInvoicesForPaymentLine(paymentLine)).thenReturn(invoices); 

        // Act
        InsertPaymentResponse response = cashAllocationDomain.insertPaymentLines(finalDataForInsertion, "user");

        // Assert
        Assertions.assertEquals("MESSAGE", response.getStatus());
        Assertions.assertEquals("Payment amount is different than invoice amount. Payment Line Amount (100), Aggregate Invoice Amount (50)", response.getErrorMessage());

        // Verify logger calls
        verify(logger).info("Netted invoice amount, 50, finalAmt");
        verify(logger).info("Payment line amount, 100, p.getAmount()");
        verify(logger).error("Payment amount is different than invoice amount. Payment Line Amount (100), Aggregate Invoice Amount (50)");
    }

    // Add a mock method to simulate getting the invoice list
    public List<InvoicePayableModel> getInvoicesForPaymentLine(PaymentLinesFeoModel paymentLine) {
        // This is a placeholder, replace with your actual logic
        return new ArrayList<>();
    }