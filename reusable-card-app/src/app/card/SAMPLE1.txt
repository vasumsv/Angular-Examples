 @Test
    void testUpdateCashAllocationStatus_MATCHED_Flow_NonEmptyMatchedCashModels() throws Exception {
        // Create test data
        ProcessCashRequest processCashRequest = new ProcessCashRequest();
        processCashRequest.setInvoiceRefs(Arrays.asList("RSF-123", "RSF-456"));
        processCashRequest.setPaymentIds(Collections.singletonList(UUID.randomUUID().toString()));

        // Create a non-empty matchedCashModels list
        List<CashAllocationModel> matchedCashModels = new ArrayList<>();
        CashAllocationModel cashAllocationModel = new CashAllocationModel();
        cashAllocationModel.setValueDate(LocalDate.now());
        matchedCashModels.add(cashAllocationModel);

        // Create InvoicesList and populate if needed
        InvoicesList invoicesList = new InvoicesList();

        // Create InvoicesAbList and populate if needed
        InvoicesAbList invoicesAbList = new InvoicesAbList();

        // Mock statusMatched to return non-empty matchedCashModels
        when(cashAllocationDomain.statusMatched(anyString(), eq(processCashRequest), anyString(), anyList(), eq(invoicesList), eq(invoicesAbList), anyList())).thenReturn(matchedCashModels);

        // Execute the method
        cashAllocationDomain.updateCashAllocationStatus("MATCHED", processCashRequest, "TEST_USER");

        // Verify that processCashRequest.setValueDate is called
        verify(processCashRequest, times(1)).setValueDate(any(LocalDate.class));
    }