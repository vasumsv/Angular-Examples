
    @Test
    void sendingPmtRequest_success() throws Exception {
        SrgAckSentRequest inputJson = new SrgAckSentRequest();
        SrgAckSentResponse expectedResponse = new SrgAckSentResponse();

        when(srgAckApiClient.sendSrgAckRequest(inputJson)).thenReturn(expectedResponse);

        SrgAckSentResponse actualResponse = (SrgAckSentResponse) sendingPmtRequestMethod.invoke(yourClass, inputJson);

        assertEquals(expectedResponse, actualResponse);
        verify(srgAckApiClient, times(1)).sendSrgAckRequest(inputJson);
    }

    @Test
    void sendingPmtRequest_exception() throws Exception {
        SrgAckSentRequest inputJson = new SrgAckSentRequest();

        when(srgAckApiClient.sendSrgAckRequest(inputJson)).thenThrow(new RestClientException("Test Exception"));

        SrgAckSentResponse actualResponse = (SrgAckSentResponse) sendingPmtRequestMethod.invoke(yourClass, inputJson);

        // Adjust this assertion based on your code's behavior when an exception occurs.
        // If it returns null, use assertEquals(null, actualResponse);
        // If it throws an exception, use assertThrows(YourException.class, () -> sendingPmtRequestMethod.invoke(yourClass, inputJson));
        assertEquals(null, actualResponse); // Example: Assumes null is returned on exception

        verify(srgAckApiClient, times(1)).sendSrgAckRequest(inputJson);
    }