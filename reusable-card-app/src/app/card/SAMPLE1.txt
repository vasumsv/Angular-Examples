  @Test
    public void testInsertPaymentLines_referentialServiceApiExceptions_feeMnemonic_portfolio() {
        // Arrange
        List<PaymentLinesFeoModel> finalDataForInsertion = new ArrayList<>();
        PaymentLinesFeoModel paymentLine = new PaymentLinesFeoModel();
        paymentLine.setFeeBdrId("fee123");
        paymentLine.setCurrency("USD");
        paymentLine.setEntityBdrId("entity456");
        finalDataForInsertion.add(paymentLine);

        InsertPaymentResponse response = new InsertPaymentResponse();

        // Mock getFeeMnemonic to throw an exception
        when(referentialServiceApi.getFeeMnemonic("fee123"))
                .thenThrow(new RuntimeException("Fee mnemonic error"));

        // Act
        response = cashAllocationDomain.insertPaymentLines(finalDataForInsertion, "user");

        // Assert - Fee Mnemonic Exception
        Assertions.assertEquals("MESSAGE", response.getStatus());
        Assertions.assertTrue(response.getErrorMessage().contains("Error occurred while getting fee mnemonic"));

        verify(logger).error(anyString());

        // Reset the response
        response = new InsertPaymentResponse();

        // Mock getPortfolioDetails to throw an exception
        when(referentialServiceApi.getPortfolioDetails("user", new BigInteger("fee123"), "USD", "entity456"))
                .thenThrow(new RuntimeException("Portfolio details error"));

        // Act
        response = cashAllocationDomain.insertPaymentLines(finalDataForInsertion, "user");

        // Assert - Portfolio Details Exception
        Assertions.assertEquals("MESSAGE", response.getStatus());
        Assertions.assertTrue(response.getErrorMessage().contains("Error occurred while getting portfolio details"));

        verify(logger, times(2)).error(anyString());
    }

    @Test
    public void testInsertPaymentLines_referentialServiceApiExceptions_currency() {
        // Arrange
        List<PaymentLinesFeoModel> finalDataForInsertion = new ArrayList<>();
        PaymentLinesFeoModel paymentLine = new PaymentLinesFeoModel();
        paymentLine.setCurrency("USD");
        finalDataForInsertion.add(paymentLine);

        InsertPaymentResponse response = new InsertPaymentResponse();

        // Mock getCurrencyDetails to throw an exception
        when(referentialServiceApi.getCurrencyDetails("USD"))
                .thenThrow(new RuntimeException("Currency details error"));

        // Act
        response = cashAllocationDomain.insertPaymentLines(finalDataForInsertion, "user");

        // Assert - Currency Details Exception
        Assertions.assertEquals("MESSAGE", response.getStatus());
        Assertions.assertTrue(response.getErrorMessage().contains("Error occurred while getting currency details"));

        verify(logger).error(anyString());
    }