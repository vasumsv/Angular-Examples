 @Test
    public void testTransferFile_Reflection() throws Exception {
        AbDomain abDomain = new AbDomain();
        Method method = AbDomain.class.getDeclaredMethod("transferFile", LocalDate.class, List.class);
        method.setAccessible(true); // Make the private method accessible

        // Prepare test data
        List<CashAllocationModel> cashAllocationModelList = new ArrayList<>();
        CashAllocationModel model = new CashAllocationModel();
        model.setInvoiceMatched("RSF-123");
        model.setCounterPartyId("1234");
        cashAllocationModelList.add(model);

        // Call the private method using reflection
        method.invoke(abDomain, LocalDate.now(), cashAllocationModelList);

        // You can add assertions if needed, but for coverage, this is sufficient
    }