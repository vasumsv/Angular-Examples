  @Test
    void testPaymentDetails_WithValueDateStart() {
        // Create test data
        String valueDateStart = "2023-10-26";
        LocalDate endDate = LocalDate.parse(valueDateStart);

        CashAllocationModel cashAllocationModel1 = new CashAllocationModel();
        CashDetails cashDetails1 = new CashDetails();
        cashDetails1.setId(1L);
        cashAllocationModel1.setCashDetails(cashDetails1);
        cashAllocationModel1.setId(1L);

        CashAllocationModel cashAllocationModel2 = new CashAllocationModel();
        CashDetails cashDetails2 = new CashDetails();
        cashDetails2.setId(2L);
        cashAllocationModel2.setCashDetails(cashDetails2);
        cashAllocationModel2.setId(2L);

        List<CashAllocationModel> cashAllocationModels = new ArrayList<>();
        cashAllocationModels.add(cashAllocationModel1);
        cashAllocationModels.add(cashAllocationModel2);

        // Mock dependencies
        when(cashAllocationRepositoryApi.findByValueDateLesserThanEqual(endDate)).thenReturn(Stream.of(cashAllocationModel1, cashAllocationModel2));

        // Call the method
        List<CashDetails> result = cashAllocationDomain.paymentDetails(valueDateStart);

        // Verify interactions
        assertEquals(2, result.size());
        assertEquals(1L, result.get(0).getId());
        assertEquals(2L, result.get(1).getId());
    }