    // Assuming you have a mock of CashAllocationDomain and any dependencies.
    // Replace with your actual setup.
    private CashAllocationDomain cashAllocationDomain = Mockito.mock(CashAllocationDomain.class);

    @Test
    void testCashAllocationModelList_ValidLines() throws Exception {
        List<String> lines = new ArrayList<>();
        lines.add("DATA_REC_FILE12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890");
        String fileName = "DATA_REC_FILE";
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMdd");
        Date expectedDate = dateFormat.parse("12345678");

        // Assuming getCashAllocationModel is correctly mocked or implemented.
        Mockito.when(cashAllocationDomain.getCashAllocationModel(Mockito.anyString(), Mockito.any(BigDecimal.class), Mockito.anyString(), Mockito.anyString(), Mockito.any(Date.class), Mockito.anyString()))
            .thenReturn(new CashAllocationModel()); // Replace with actual CashAllocationModel creation

        List<CashAllocationModel> result = cashAllocationDomain.cashAllocationModelList(lines, fileName);

        assertNotNull(result);
        assertEquals(1, result.size());
        // Add more assertions to verify the content of the CashAllocationModel objects.
        // For example:
        // assertEquals("extractedInvoiceRef", result.get(0).getInvoiceRef());
        // assertEquals(BigDecimal.valueOf(extractedAmount), result.get(0).getAmount());

    }

    @Test
    void testCashAllocationModelList_InvalidDate() {
        List<String> lines = new ArrayList<>();
        lines.add("DATA_REC_FILEinvalidDate12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890");
        String fileName = "DATA_REC_FILE";

        List<CashAllocationModel> result = cashAllocationDomain.cashAllocationModelList(lines, fileName);

        assertNotNull(result);
        assertEquals(0, result.size()); // No CashAllocationModel should be created due to invalid date.
    }

    @Test
    void testCashAllocationModelList_shortLine() {
        List<String> lines = new ArrayList<>();
        lines.add("shortLine");
        String fileName = "DATA_REC_FILE";

        List<CashAllocationModel> result = cashAllocationDomain.cashAllocationModelList(lines, fileName);

        assertNotNull(result);
        assertEquals(0, result.size()); // No CashAllocationModel should be created due to short line.
    }