    @Test
    public void testGetPaymentLinesFromPaymentReference_DirtyTest_FullCoverage() {
        // Arrange
        String[] paymentReferences = {"REF1", "REF2"};

        // Mock data
        List<CashAllocationModel> paymentLines = new ArrayList<>();
        CashAllocationModel paymentModel1 = CashAllocationModel.builder()
                .id(UUID.randomUUID())
                .counterPartyId("CP1")
                .accountNumber("ACCT1")
                .currency("USD")
                .amount(BigDecimal.valueOf(100.0))
                .supllimentary("SUP1")
                .invoiceReferenceReceived("INV1,INV2")
                .invoiceMatched("MATCHED1")
                .status("STATUS1")
                .valueDate(LocalDate.now())
                .paymentDate(LocalDate.now().minusDays(1))
                .version(1)
                .actionPerformedBy("USER1")
                .build();

        CashAllocationModel paymentModel2 = CashAllocationModel.builder()
                .id(UUID.randomUUID())
                .counterPartyId("CP2")
                .accountNumber("ACCT2")
                .currency("EUR")
                .amount(BigDecimal.valueOf(200.0))
                .supllimentary("SUP2")
                .invoiceReferenceReceived("INV3")
                .invoiceMatched("MATCHED2")
                .status("STATUS2")
                .valueDate(LocalDate.now().plusDays(1))
                .paymentDate(LocalDate.now().minusDays(2))
                .version(2)
                .actionPerformedBy("USER2")
                .build();

        paymentLines.add(paymentModel1);
        paymentLines.add(paymentModel2);

        // Mock repository method (corrected method name)
        when(cashAllocationRepositoryApi.findPaymentLinesForAutoMatching(any(List.class), any(List.class), any(String.class), any(LocalDate.class)))
                .thenReturn(paymentLines);

        // Mock getSsiDetails
        List<String> ssiDetails = new ArrayList<>();
        ssiDetails.add("SSI1");
        ssiDetails.add("SSI2");
        when(cashAllocationDomain.getSsiDetails(any(String.class), any(String.class), any(String.class), any(String.class)))
                .thenReturn(ssiDetails);

        // Act
        // Assuming your method uses findPaymentLinesForAutoMatching, adjust accordingly
        // You might need to adjust the parameters based on what your method actually calls
        cashAllocationDomain.getPaymentLinesFromPaymentReference(paymentReferences);

        // No assertions, just aiming for line coverage
    }